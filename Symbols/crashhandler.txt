
 .objc_class_name_NSAutoreleasePool
 .objc_class_name_NSBundle
 .objc_class_name_NSString
 B CBreakpadFactory::sm_HandlerMutex
 B SteamThreadTools::g_SuspendResumeLock
 B SteamThreadTools::g_nCurThreadSuspendCount
 B SteamThreadTools::g_pCurThread
 B SteamVProf::CVProfNode::s_iCurrentUniqueNodeID
 B SteamVProf::g_mutexProfileDump
 B g_CrashHandler
 B g_StackDumpMutex
 B g_TestHarness
 B g_VProfManager
 B g_VProfProfilesRunningCount
 B g_VProfile
 B s_NoEscConversion
 B s_StringCharConversion
 B s_bInAssert
 BreakpadAddUploadParameter
 BreakpadCreate
 BreakpadGenerateAndSendReport
 BreakpadRelease
 BreakpadSetComment
 BreakpadSetFilterCallback
 CFDictionaryCreate
 CFRelease
 CFStringCompare
 CFStringCreateWithCString
 D g_ClockSpeed
 D g_ClockSpeedMicrosecondsMultiplier
 D g_ClockSpeedMillisecondsMultiplier
 D g_ClockSpeedSecondsMultiplier
 D g_dwClockSpeed
 D typeinfo for CBreakpadFactory
 D typeinfo for CCrashHandler
 D typeinfo for CPathString
 D typeinfo for CStdMemAlloc
 D typeinfo for CUtlCStringConversion
 D typeinfo for CUtlCharConversion
 D typeinfo for CUtlNoEscConversion
 D typeinfo for IBreakpadFactory
 D typeinfo for ICrashHandler
 D typeinfo for IMemAlloc
 D vtable for CBreakpadFactory
 D vtable for CCrashHandler
 D vtable for CPathString
 D vtable for CStdMemAlloc
 D vtable for CUtlCStringConversion
 D vtable for CUtlCharConversion
 D vtable for CUtlNoEscConversion
 Gestalt
 OBJC_CLASS_$_NSAutoreleasePool
 OBJC_CLASS_$_NSBundle
 OBJC_CLASS_$_NSString
 R typeinfo name for CBreakpadFactory
 R typeinfo name for CCrashHandler
 R typeinfo name for CPathString
 R typeinfo name for CStdMemAlloc
 R typeinfo name for CUtlCStringConversion
 R typeinfo name for CUtlCharConversion
 R typeinfo name for CUtlNoEscConversion
 R typeinfo name for IBreakpadFactory
 R typeinfo name for ICrashHandler
 R typeinfo name for IMemAlloc
 T AssertMsgImplementation
 T BBlockingGetMiniDumpLock
 T BGetMiniDumpLock
 T BWritingMiniDump
 T Breakpad_SetSteamID
 T CBreakpadFactory::AllocateHandle()
 T CBreakpadFactory::Init()
 T CBreakpadFactory::InitHandler(void*, char const*, char const*, char const*, void*, void (*)(void*))
 T CBreakpadFactory::Lookup(void*)
 T CBreakpadFactory::SetAppID(unsigned int)
 T CBreakpadFactory::SetMinidumpDirectory(char const*)
 T CBreakpadFactory::SetSteamID(unsigned long long)
 T CBreakpadFactory::ShutdownHandler(void*)
 T CBreakpadFactory::WriteMiniDump(void*)
 T CBreakpadFactory::WriteMiniDumpSetComment(char const*)
 T CBreakpadFactory::~CBreakpadFactory()
 T CCrashHandler::AllocateHandle()
 T CCrashHandler::GetGlobals()
 T CCrashHandler::InstallExceptionHandler(void*, char const*, char const*, char const*, bool, void*, void (*)(void*))
 T CCrashHandler::RemoveExceptionHandler(void*)
 T CCrashHandler::SetAppID(unsigned int)
 T CCrashHandler::SetMinidumpComment(char const*)
 T CCrashHandler::SetSteamID(unsigned long long)
 T CCrashHandler::WriteMinidump(void*, unsigned int, void*)
 T CCrashHandlerScope::~CCrashHandlerScope()
 T CDbgFmtMsg::CDbgFmtMsg(char const*, ...)
 T CDirIterator::BNextFile()
 T CDirIterator::CDirIterator(char const*, char const*)
 T CDirIterator::CurrentFileName()
 T CDirIterator::Init(char const*)
 T CDirIterator::~CDirIterator()
 T CHandlerContext::Breakpad_FilterCallback(int, int, unsigned int, void*)
 T CHandlerContext::Init(char const*, char const*, char const*, char const*, void*, void (*)(void*))
 T CHandlerContext::SendPendingDumps()
 T CHandlerContext::SetAppID(unsigned int)
 T CHandlerContext::SetComment(char const*)
 T CHandlerContext::SetSteamID(unsigned long long)
 T CHandlerContext::Shutdown()
 T CHandlerContext::~CHandlerContext()
 T CIPCToolMachClient::DoKillCommand(char const*)
 T CIPCToolMachClient::GetSteamPath(char*, unsigned long, int*)
 T CIPCToolMachClient::Init()
 T CL2Cache::CL2Cache()
 T CL2Cache::End()
 T CL2Cache::Start()
 T CL2Cache::~CL2Cache()
 T CPathString::CPathString(char const*, char const*)
 T CPathString::Clear()
 T CPathString::Validate(CValidator&, char const*)
 T CSimpleMachClient::DoVersionCommand()
 T CSimpleMachClient::Init(char const*, unsigned int, bool)
 T CSimpleMachClient::Send(mach_msg_header_t*, unsigned int, int*)
 T CSimpleMachClient::SendAndReceive(mach_msg_header_t*, mach_msg_header_t*, unsigned int, int*)
 T CSimpleMachClient::~CSimpleMachClient()
 T CStdMemAlloc::Alloc(unsigned long)
 T CStdMemAlloc::Alloc(unsigned long, char const*, int, bool, bool)
 T CStdMemAlloc::AllocCanFail(unsigned long)
 T CStdMemAlloc::AllocCanFail(unsigned long, char const*, int, bool)
 T CStdMemAlloc::AllocTracked(unsigned long)
 T CStdMemAlloc::BIsVirtualHeapInitialized()
 T CStdMemAlloc::CompactHeap()
 T CStdMemAlloc::CompactIncremental()
 T CStdMemAlloc::ComputeMemoryUsedBy(char const*)
 T CStdMemAlloc::CpubAllocated()
 T CStdMemAlloc::CrtCheckMemory()
 T CStdMemAlloc::CrtDbgReport(int, char const*, int, char const*, char const*)
 T CStdMemAlloc::CrtIsValidHeapPointer(void const*)
 T CStdMemAlloc::CrtIsValidPointer(void const*, unsigned int, int)
 T CStdMemAlloc::CrtMemCheckpoint(_CrtMemState*)
 T CStdMemAlloc::CrtSetBreakAlloc(long)
 T CStdMemAlloc::CrtSetDbgFlag(int)
 T CStdMemAlloc::CrtSetReportFile(int, void*)
 T CStdMemAlloc::CrtSetReportHook(void*)
 T CStdMemAlloc::CrtSetReportMode(int, int)
 T CStdMemAlloc::CubAllocated()
 T CStdMemAlloc::CubAllocatedUntracked()
 T CStdMemAlloc::CubLogicalAllocated()
 T CStdMemAlloc::DefaultFailHandler(unsigned long)
 T CStdMemAlloc::DumpStats()
 T CStdMemAlloc::DumpStatsFileBase(char const*)
 T CStdMemAlloc::Expand_NoLongerSupported(void*, unsigned long)
 T CStdMemAlloc::Expand_NoLongerSupported(void*, unsigned long, char const*, int)
 T CStdMemAlloc::Free(void*, bool)
 T CStdMemAlloc::Free(void*, char const*, int, bool)
 T CStdMemAlloc::FreeTracked(void*)
 T CStdMemAlloc::GetActualDbgInfo(char const*&, int&)
 T CStdMemAlloc::GetAllocationFile(void*)
 T CStdMemAlloc::GetAllocationLine(void*)
 T CStdMemAlloc::GetFirstMemBlock()
 T CStdMemAlloc::GetNextMemBlock(void*)
 T CStdMemAlloc::GetSize(void*)
 T CStdMemAlloc::GetSize(void*, bool)
 T CStdMemAlloc::InitVirtualHeap(EVirtualHeapSize)
 T CStdMemAlloc::InternalAlloc(unsigned long, bool)
 T CStdMemAlloc::InternalAllocFromPools(unsigned long)
 T CStdMemAlloc::InternalFree(void*)
 T CStdMemAlloc::InternalRealloc(void*, unsigned long)
 T CStdMemAlloc::IsClaimed(void*)
 T CStdMemAlloc::IsDebugHeap()
 T CStdMemAlloc::IsMemLeak(void*)
 T CStdMemAlloc::IsMemLeakReported(void*)
 T CStdMemAlloc::IsMemUntracked(void*)
 T CStdMemAlloc::IsValid(void*)
 T CStdMemAlloc::MemoryAllocFailed()
 T CStdMemAlloc::OutOfMemory(unsigned long)
 T CStdMemAlloc::PopAllocDbgInfo()
 T CStdMemAlloc::PrintCallStack(void*)
 T CStdMemAlloc::PushAllocDbgInfo(char const*, int)
 T CStdMemAlloc::Realloc(void*, unsigned long)
 T CStdMemAlloc::Realloc(void*, unsigned long, char const*, int, bool)
 T CStdMemAlloc::RegisterAllocation(char const*, int, unsigned long, unsigned long, unsigned int)
 T CStdMemAlloc::RegisterDeallocation(char const*, int, unsigned long, unsigned long, unsigned int)
 T CStdMemAlloc::SetAllocFailHandler(unsigned long (*)(unsigned long))
 T CStdMemAlloc::SetBClaimed(void*, bool)
 T CStdMemAlloc::SetCRTAllocFailed(unsigned long)
 T CStdMemAlloc::SetDebugStackDumpOnAlloc(unsigned long, unsigned long, int)
 T CStdMemAlloc::SetLowFragmentationHeap()
 T CStdMemAlloc::SetMemLeakReported(void*)
 T CStdMemAlloc::SetMemUntracked(void*)
 T CStdMemAlloc::WalkAndAuditHeap()
 T CStdMemAlloc::heapchk()
 T CStdMemAlloc::~CStdMemAlloc()
 T CSteam3DumpHelper::ComputeBuildID(char const*, char const*)
 T CSteam3DumpHelper::GetProduct()
 T CSteam3DumpHelper::GetVersion()
 T CSteam3DumpHelper::Init()
 T CSteam3DumpHelper::LoadModule(char const*)
 T CSteam3DumpHelper::Shutdown()
 T CSteam3DumpHelper::~CSteam3DumpHelper()
 T CTestHarness::~CTestHarness()
 T CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
 T CUtlCStringConversion::FindConversion(char const*, int*)
 T CUtlCharConversion::CUtlCharConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
 T CUtlCharConversion::FindConversion(char const*, int*)
 T CUtlFmtString::CUtlFmtString(char const*, ...)
 T CUtlMemoryBase::CUtlMemoryBase(int, int, int)
 T CUtlMemoryBase::Grow(int)
 T CUtlMemoryBase::NumAllocated() const
 T CUtlMemoryBase::Purge()
 T CUtlMemoryBase::~CUtlMemoryBase()
 T CUtlNoEscConversion::FindConversion(char const*, int*)
 T CUtlString::AssertStringTooLong()
 T CUtlStringBuilder::AppendChar(char)
 T CUtlStringBuilder::Data::FreeHeap()
 T CUtlStringBuilder::Data::MoveToHeap()
 T CUtlStringBuilder::Data::SetError(bool)
 T CUtlStringBuilder::Data::SetLength(unsigned long)
 T CUtlStringBuilder::InternalPrepareBuffer(unsigned long, bool, unsigned long)
 T CUtlStringBuilder::PrepareBuffer(unsigned long, bool, unsigned long)
 T CUtlVector<CHandlerContext*, CUtlMemory<CHandlerContext*> >::FindAndRemove(CHandlerContext* const&)
 T CUtlVector<CHandlerContext*, CUtlMemory<CHandlerContext*> >::GrowVector(int)
 T CUtlVector<CHandlerContext*, CUtlMemory<CHandlerContext*> >::InsertBefore(int, CHandlerContext* const&)
 T CUtlVector<CHandlerContext*, CUtlMemory<CHandlerContext*> >::ShiftElementsLeft(int, int)
 T CUtlVector<CHandlerContext*, CUtlMemory<CHandlerContext*> >::ShiftElementsRight(int, int)
 T CUtlVector<CHandlerContext*, CUtlMemory<CHandlerContext*> >::~CUtlVector()
 T CValObject::ClaimMemoryBlock(void*, unsigned long)
 T CValObject::Init(char const*, void*, char const*, CValObject*, CValObject*)
 T CValidator::ClaimArrayMemory(void*)
 T CValidator::Pop()
 T CValidator::Push(char const*, void*, char const*)
 T CalculateCPUFreq()
 T CallFlushLogFunc
 T CheckSSE4aTechnology()
 T ClearWritingMiniDump
 T CrashOnPurpose()
 T CreateInterface
 T CreateSimpleProcess
 T CreateVProfile
 T DefaultSpewFunc(SpewType_t, char const*)
 T DoNewAssertDialog
 T Error
 T FillDataStruct(_finddata_t*)
 T FindSpewGroup(char const*, int*)
 T GetCPUInformation()
 T GetMemAlloc
 T GetOSType
 T GetProcessorBrand()
 T GetProcessorDetailBlob(int*)
 T InitStackWalk()
 T IsSpewActive
 T MiniDumpUnlock
 T Msg
 T Plat_GetCommandLine
 T Plat_GetExecutablePath
 T Plat_GetStackBackTrace
 T Plat_IsInDebugSession
 T RealGetCallStack
 T RealPrintCallStack
 T SetInAssert
 T SetWritingMiniDump(bool)
 T ShouldUseNewAssertDialog
 T SteamThreadTools::CThreadLocal<int>::~CThreadLocal()
 T SteamThreadTools::CThreadLocal<long long>::~CThreadLocal()
 T SteamThreadTools::CThreadLocalBase::CThreadLocalBase()
 T SteamThreadTools::CThreadLocalBase::Get() const
 T SteamThreadTools::CThreadLocalBase::Set(void*)
 T SteamThreadTools::CThreadLocalBase::~CThreadLocalBase()
 T SteamThreadTools::CThreadLocalInt<int>::~CThreadLocalInt()
 T SteamThreadTools::CThreadLocalInt<long long>::~CThreadLocalInt()
 T SteamThreadTools::CThreadLocalPtr<SteamThreadTools::CThread>::~CThreadLocalPtr()
 T SteamThreadTools::CThreadLocalPtr<SteamVProf::CVProfile>::~CThreadLocalPtr()
 T SteamThreadTools::CThreadLocalStackCounter<int>::CThreadLocalStackCounter(SteamThreadTools::CThreadLocal<int>&)
 T SteamThreadTools::CThreadLocalStackCounter<int>::~CThreadLocalStackCounter()
 T SteamThreadTools::CThreadLocalStackCounter<long long>::CThreadLocalStackCounter(SteamThreadTools::CThreadLocal<long long>&)
 T SteamThreadTools::CThreadLocalStackCounter<long long>::~CThreadLocalStackCounter()
 T SteamThreadTools::CThreadMutex::CThreadMutex()
 T SteamThreadTools::CThreadMutex::~CThreadMutex()
 T SteamThreadTools::CThreadSpinLock::Lock(unsigned int) volatile
 T SteamThreadTools::CThreadSpinLock::~CThreadSpinLock()
 T SteamThreadTools::CreateSimpleThread(unsigned int (*)(void*), void*, unsigned int*, unsigned int)
 T SteamThreadTools::InitMainThread()
 T SteamVProf::CVProfManager::AddProfileForThread(SteamVProf::CVProfile*, unsigned int, _opaque_pthread_t*)
 T SteamVProf::CVProfManager::~CVProfManager()
 T SteamVProf::CVProfNode::EnterScope(void*)
 T SteamVProf::CVProfNode::ExitScope()
 T SteamVProf::CVProfNode::GetSubNode(char const*, int, EVProfBugdetGroup, int)
 T SteamVProf::CVProfNode::Reset()
 T SteamVProf::CVProfile::AddBudgetGroupName(EVProfBugdetGroup, int, char const*)
 T SteamVProf::CVProfile::CVProfile()
 T SteamVProf::CVProfile::CreateBudgetGroups()
 T SteamVProf::CVProfile::FreeNodes_R(SteamVProf::CVProfNode*)
 T SteamVProf::CVProfile::Term()
 T SteamVProf::CVProfile::~CVProfile()
 T SteamVProf::CVProfileThreadEntry::DeleteProfile()
 T Test_SetFailed
 T ThreadGetCurrentId
 T ThreadGetCurrentRunningRef
 T ThreadInMainThread
 T ThreadInterlockedAssignIf
 T ThreadInterlockedDecrement
 T ThreadInterlockedExchange
 T ThreadInterlockedExchangeAdd64
 T ThreadInterlockedIncrement
 T ThreadIsThreadRunning
 T ThreadSleep
 T ThreadWaitForProcessExit
 T UtlMemory_CalcNewAllocationCount(int, int, int, int)
 T V_AppendSlash
 T V_EscapeShellArgumentAndAppend(CUtlStringBuilder*, char const*)
 T V_EscapeShellArgumentAndAppendPOSIX(char*, unsigned long, char const*)
 T V_FixDoubleSlashes
 T V_MakeAbsolutePath
 T V_RemoveDotSlashes
 T V_StripFilename
 T V_StripTrailingSlash
 T V_UnqualifiedFileName
 T V_snprintf
 T V_strncat
 T V_strncpy
 T WriteMiniDump
 T _DMsg
 T _ExitOnFatalAssert
 T _SpewMessage
 T _SpewMessageType
 T __clang_call_terminate
 T _findfirst(char const*, _finddata_t*)
 T _findnext(long long, _finddata_t*)
 T std::__1::__tree<FileAndLine_t, std::__1::less<FileAndLine_t>, std::__1::allocator<FileAndLine_t> >::__insert_node_at(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*)
 T std::__1::__tree<FileAndLine_t, std::__1::less<FileAndLine_t>, std::__1::allocator<FileAndLine_t> >::__insert_unique(FileAndLine_t const&)
 T std::__1::__tree<FileAndLine_t, std::__1::less<FileAndLine_t>, std::__1::allocator<FileAndLine_t> >::destroy(std::__1::__tree_node<FileAndLine_t, void*>*)
 T std::__1::__tree<std::__1::__value_type<SteamVProf::CVProfNode*, double>, std::__1::__map_value_compare<SteamVProf::CVProfNode*, std::__1::__value_type<SteamVProf::CVProfNode*, double>, std::__1::less<SteamVProf::CVProfNode*>, true>, std::__1::allocator<std::__1::__value_type<SteamVProf::CVProfNode*, double> > >::destroy(std::__1::__tree_node<std::__1::__value_type<SteamVProf::CVProfNode*, double>, void*>*)
 T std::__1::__tree<std::__1::__value_type<char const*, unsigned int>, std::__1::__map_value_compare<char const*, std::__1::__value_type<char const*, unsigned int>, std::__1::less<char const*>, true>, std::__1::allocator<std::__1::__value_type<char const*, unsigned int> > >::destroy(std::__1::__tree_node<std::__1::__value_type<char const*, unsigned int>, void*>*)
 T std::__1::__tree_iterator<FileAndLine_t, std::__1::__tree_node<FileAndLine_t, void*>*, int> std::__1::__tree<FileAndLine_t, std::__1::less<FileAndLine_t>, std::__1::allocator<FileAndLine_t> >::find<FileAndLine_t>(FileAndLine_t const&)
 T std::__1::__tree_iterator<FileAndLine_t, std::__1::__tree_node<FileAndLine_t, void*>*, long> std::__1::__tree<FileAndLine_t, std::__1::less<FileAndLine_t>, std::__1::allocator<FileAndLine_t> >::find<FileAndLine_t>(FileAndLine_t const&)
 T std::__1::__tree_node_base<void*>*& std::__1::__tree<FileAndLine_t, std::__1::less<FileAndLine_t>, std::__1::allocator<FileAndLine_t> >::__find_equal<FileAndLine_t>(std::__1::__tree_node_base<void*>*&, FileAndLine_t const&)
 T std::__1::__vector_base<SteamVProf::IVProfileCallbackHandler*, std::__1::allocator<SteamVProf::IVProfileCallbackHandler*> >::~__vector_base()
 T std::__1::__vector_base<SteamVProf::TimeSums_t, std::__1::allocator<SteamVProf::TimeSums_t> >::~__vector_base()
 T std::__1::set<FileAndLine_t, std::__1::less<FileAndLine_t>, std::__1::allocator<FileAndLine_t> >::~set()
 T void std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*)
 T void std::__1::__tree_left_rotate<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*)
 T void std::__1::__tree_right_rotate<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*)
 _NSGetExecutablePath
 _Unwind_Resume
 __CFConstantStringClassReference
 __bzero
 __cxa_atexit
 __cxa_begin_catch
 __cxa_guard_abort
 __cxa_guard_acquire
 __cxa_guard_release
 __divdi3
 __error
 __fixunsdfdi
 __gxx_personality_v0
 __stack_chk_fail
 __stack_chk_guard
 __stderrp
 __tolower
 __toupper
 __udivdi3
 __umoddi3
 _dyld_get_image_name
 _exit
 alphasort$INODE64
 atoi
 b AssertMsgImplementation::s_ThreadLocalAssertMsgGuardStatic
 b AssertMsgImplementation::s_bDisableDebuggerBreak
 b CHandlerContext::Init(char const*, char const*, char const*, char const*, void*, void (*)(void*))::values
 b ClearWritingMiniDump::fAsserted
 b GetCPUInformation()::pi
 b GetMemAlloc::s_StdMemAlloc
 b GetMiniDumpMutex()::ThreadMutexMiniDump
 b GetMinidumpsWritten()::MinidumpsWritten
 b GetProcessorBrand()::CPUBrand
 b GetProcessorDetailBlob(int*)::DetailBlob
 b GetProcessorVendorId()::VendorID
 b SetWritingMiniDump(bool)::fAsserted
 b SteamThreadTools::g_ThreadMainThreadID
 b TestForAppleGraphicsUpdateInstalled()::bInstalled
 b TestForAppleGraphicsUpdateInstalled()::bLoaded
 b TestForAppleGraphicsUpdateInstalled()::handle
 b _SpewMessageType::autoMutex__
 b _ZL6g_Info.0
 b _ZL6g_Info.1
 b _ZL6g_Info.2
 b g_CmdLine
 b g_DumpHelper
 b g_bBreak
 b g_bDumpWritten
 b g_bWritingFatalMinidump
 b g_bWritingNonfatalMinidump
 b g_pAssertDisables
 b guard variable for AssertMsgImplementation::s_ThreadLocalAssertMsgGuardStatic
 b guard variable for CHandlerContext::Init(char const*, char const*, char const*, char const*, void*, void (*)(void*))::values
 b guard variable for GetMemAlloc::s_StdMemAlloc
 b guard variable for GetMiniDumpMutex()::ThreadMutexMiniDump
 b guard variable for GetMinidumpsWritten()::MinidumpsWritten
 b guard variable for TestForAppleGraphicsUpdateInstalled()::handle
 b guard variable for _SpewMessageType::autoMutex__
 b s_AssertFailedNotifyFunc
 b s_DefaultLevel
 b s_FlushLogFunc
 b s_GroupCount
 b s_LastMiniDumpTime
 b s_Line
 b s_OSXBreakpadFactory
 b s_SpewType
 b s_bCPUHasFastREPMOVSB
 b s_bSetSigHandler
 b s_pFileName
 b s_pSpewGroups
 b selectBuf
 b sm_bAssertDumpStack
 backtrace
 backtrace_symbols
 bootstrap_look_up
 bootstrap_port
 chmod
 chmod$UNIX2003
 d CHandlerContext::Init(char const*, char const*, char const*, char const*, void*, void (*)(void*))::keys
 d GetOSType::eOSVersion
 d TestForAppleGraphicsUpdateInstalled()::attribs
 d g_CrashHandlerSingleton
 d s_SpewOutputFunc
 d s_pConversionArrays_NoEscConversion
 d s_pConversionArrays_StringCharConversion
 dladdr
 dlclose
 dlopen
 dlsym
 dyld_stub_binder
 fork
 fprintf
 free
 fwrite
 fwrite$UNIX2003
 getcwd
 getenv
 getpid
 gettimeofday
 kCFAllocatorDefault
 kCFTypeDictionaryKeyCallBacks
 kCFTypeDictionaryValueCallBacks
 kill
 kill$UNIX2003
 launch_data_alloc
 launch_data_dict_insert
 launch_data_free
 launch_data_new_string
 launch_msg
 lstat$INODE64
 mach_msg
 mach_port_allocate
 mach_port_deallocate
 mach_task_self_
 malloc
 malloc_size
 memcpy
 memmove
 mkdir
 nanosleep
 nanosleep$UNIX2003
 objc_msgSend
 operator delete(void*)
 operator delete[](void*)
 operator new(unsigned long)
 operator new[](unsigned long)
 printf
 pthread_cond_destroy
 pthread_cond_wait
 pthread_cond_wait$UNIX2003
 pthread_create
 pthread_getspecific
 pthread_join
 pthread_join$UNIX2003
 pthread_key_create
 pthread_key_delete
 pthread_kill
 pthread_mach_thread_np
 pthread_mutex_destroy
 pthread_mutex_init
 pthread_mutex_lock
 pthread_mutex_trylock
 pthread_mutex_unlock
 pthread_mutexattr_init
 pthread_mutexattr_settype
 pthread_self
 pthread_setspecific
 realloc
 scandir$INODE64
 sched_yield
 signal
 sigprocmask
 snprintf
 sscanf
 stat$INODE64
 std::terminate()
 strcasecmp
 strchr
 strcmp
 strcpy
 strlen
 strncasecmp
 strncat
 strncpy
 strrchr
 strstr
 sysctl
 sysctlnametomib
 system
 system$UNIX2003
 t FileSelect(dirent const*)
 t GetMiniDumpMutex()
 t GetMinidumpsWritten()
 t ProcessRawStack(void**, int, int, CStack&)
 t SteamThreadTools::ThreadProcConvert(void*)
 t WriteMiniDumpThread(void*)
 t global constructors keyed to 000200
 time
 usleep
 usleep$UNIX2003
 vsnprintf
 vtable for __cxxabiv1::__class_type_info
 vtable for __cxxabiv1::__si_class_type_info
